# Fortissimo Quickstart

This short document describes how to quickly create a Fortissimo application.


1. Create a new project directory:

~~~
$ mkdir MyApp
$ cd MyApp
~~~

2. Create a `composer.json` file in the project directory. At minimum,
   it should look like this:

~~~
{
  "name": "myname/myapp",
  "description": "My Application",
  "require": {
    "technosophos/fortissimo": "2.x",
  },
  "autoload": {
    "psr-0": { "": "src/" }
  }
}
~~~

This creates the structure for your app.

3. Start writing code. You probably want an `index.php` file that looks
   something like this:

~~~
<?php
require_once 'vendor/autoloader.php';

use \Fortissimo\Runtime\WebRunner;
use \Fortissimo\Registry;

$register = new Registry('myApp');
$runner = new WebRunner();
$runner->useRegistry($register);

// Register routes here...
$register->route('default')
  ->does('\Fortissimo\Command\EchoText')
    ->using('text', 'Hello World')
;

$runner->run($_SERVER['REQUEST_URI']);
?>
~~~

The above creates a very basic Hello World app.

4. Begin writing your own code.

Building a Fortissimo app generally consists of two things:

- Building routes (`$register->route()`)
- Creating commands

Commands are highly re-usable components. A route is nothing other than
a map of a named route to a sequence of commands.

   
## How a Request is Handled
 
In a nutshell, this is how Fortissimo handles a request:

~~~

    browser -> 
              request->
                       command1
                          |
                       command2
                          |
                     <-command3
            <-request
    browser          

~~~

In the above flow chart, a browser performs a request (a route), which
then results in each command in the route being run. Finally, one of the
commands will (presumably) return data to the browser.

## Writing Routes

Writing routes is covred the `Command-exaples.mdown`

## Writing Commands

Writing commands is covered... somewhere.

Take a look at the example commands in `src/Fortissimo/Command` inside
of Fortissimo's source code.

