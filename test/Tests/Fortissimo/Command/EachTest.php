<?php
namespace Fortissimo\Tests;
$base = dirname(__DIR__);
require_once $base . '/TestCase.php';

/**
 * @group command
 */
class EachTest extends TestCase {
  public function testDoCommand() {
    $r = $this->registry();
    $r->route('test')
      ->does('\Fortissimo\Command\Flow\Each', 'each')
      ->using('list', array(1, 2, 3))
      ->using('command', '\Fortissimo\Command\Util\Increment')
      ->using('commandName', 'up')
      ->using('startWith')->from('each:value')
      ;

    $runner = $this->runner($r);

    $cxt = $runner->run('test');

    $this->assertTrue($cxt->has('each'));
    $this->assertTrue($cxt->has('up'));

    $results = $cxt->get('each', array());
    $this->assertEquals(3, count($results));
    $this->assertEquals(2, $results[0]);
    $this->assertEquals(3, $results[1]);
    $this->assertEquals(4, $results[2]);
  }
  public function testDoCommandClosure() {
    $test = $this;
    $r = $this->registry();
    $r->route('test')
      ->does('\Fortissimo\Command\Flow\Each', 'ABCD')
      ->using('list', array(3, 5, 7))
      ->using('command', function ($cxt, $name, $params) use ($test) {
        // Test to make sure the name is autogenerated.
        $test->assertGreaterThan(10, strlen($name));
        $val = $cxt->get('ABCD_value');
        $last = $cxt->get($name, 0) + $val;
        return $last;
      })
      ;

    $runner = $this->runner($r);

    $cxt = $runner->run('test');

    $accumulator = $cxt->get('ABCD', array());

    $this->assertEquals(3, count($accumulator));
    $this->assertEquals(15, $accumulator[2]);
  }
}
